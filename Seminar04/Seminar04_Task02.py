# Найдите корни квадратного уравнения Ax² + Bx + C = 0 двумя способами:
# 1. С помощью математических формул нахождения корней квадратного уравнения
# 2. С помощью дополнительных библиотек Python

# 4x² + 5x - 26 = 0

import math


def dis_cont(tup):  # Функция нахождения дискриминанта
    a, b, c = tup  # Распаковываем кортеж
    d = (b**2 - 4*a*c,)  # Дискриминант преобразуем в кортеж
    tup = tup + d  # Объединяем кортежи
    return tup  # Функция возвращает объединённый кортеж


def roots(tup_unit):  # Функция нахождения корней уравнения
    a, b, c, d = tup_unit  # Распаковываем кортеж
    if d < 0:
        return('Уравнение действительных корней не имеет')
    elif d == 0:
        return f'Уравнение имеет один корень x = {(-b + math.sqrt(d)) / (2 * a)}'
    else:
        return f'Уравнение имеет два корня:\n{((-b + d**0.5) / (2 * a), (-b - d**0.5) / (2 * a))}'


# Примеры коэффициентов для проверки работы программы
tup_in = (1, 4, 3)  # (-1, -3)
# tup_in = (3, -4, 94)  # Корней не имеет
# tup_in = (-4, 28, -49)  # Один корень x = 3.5
# tup_in = (0.5, 0.125, 0) # (0, -0.25)
# tup_in = (8, 0, 5) # Корней не имеет
# tup_in = (4, 5, -26) # (2.0, -3.25)

print(roots(dis_cont(tup_in)))  # Вызов функции
